

- Anther exple of using this :
https://chris.banes.me/2014/10/17/appcompat-v21/
The widget tinting in appcompat works by intercepting any layout inflation and inserting a special tint-aware version
of the widget in its place
https://android.googlesource.com/platform/frameworks/support/+/master/v7/appcompat/src/android/support/v7/internal/app/TintViewInflater.java


- for stuff where you need custom drawing or custom stuff like extending a custom widget
     you can something like appcompat v7 does with tint in its TintLayoutInflater

     in public final View createView(View parent, final String name, @NonNull Context context ...)
             switch (name) {
                 case "EditText":
                     return new TintEditText(context, attrs);
                 case "Spinner":
                     return new TintSpinner(context, attrs);
                 case "CheckBox":
                     return new TintCheckBox(context, attrs);
                 case "Button":
                     return new TintButton(context, attrs);
             }
     //and it even does customised theming

 - get inspiration for api & names from Picasso and how its implemented